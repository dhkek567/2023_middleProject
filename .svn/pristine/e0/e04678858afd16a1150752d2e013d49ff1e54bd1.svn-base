<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Pet">

	<insert id="insertPet" parameterType="kr.or.ddit.banban.vo.PetVO">

		insert into
		pet(pet_no, mem_id, pet_name, pet_regno, pet_chip, pet_kind, 
		pet_gender, pet_neu, pet_bir, pet_etc)
		values((select nvl(max(pet_no),0)+1 from pet),#{memId},#{petNm},#{petRegno},#{petChip},#{petKind},
		#{petGender},#{petNeu},#{petBir},#{petEtc});

	</insert>

	<select id="checkCnt" parameterType="String" resultType="int">
		select count(*) as cnt
		from pet
		where pet_no = #{petNo}
	</select>

	<!-- //PetVO [petNo=1, memId=null, memNm=우태원, petNm=멍총이, petRegno=123456789, petChip=O, petKind=강아지, petGender=F
    	  //, petNeu=Y, petBir=2016-05-05 00:00:00, petEtc=너무나도 귀여워서 보는 순간 죽을 수 있음, memAddr=대전광역시 대덕구 중리동] -->
	<update id="updatePet" parameterType="kr.or.ddit.banban.vo.PetVO">
	
		update pet
		set 
		pet_name = #{petNm},
		pet_regno = #{petRegno},
		pet_chip = #{petChip},
		pet_kind = #{petKind},
		pet_gender = #{petGender},
		pet_neu = #{petNeu},
		pet_bir = TRUNC(TO_DATE(#{petBir}, 'YYYY-MM-DD HH24:MI:SS'))
		<if test="petEtc !=null and petEtc !=''">
			,pet_etc = #{petEtc}
		</if>
		where pet_no = #{petNo}

	</update>

	<delete id="deletePet" parameterType="String">

		delete from pet
		where pet_no = #{petNo}

	</delete>

	<select id="getAllPet" parameterType="String" resultType="kr.or.ddit.banban.vo.PetVO">

		select 
		p.pet_no	as petNo,
		m.mem_id	as memId,
		p.pet_name 	 as petNm,
        m.mem_nm      as memNm,
		p.pet_regno	 as petRegno,
		p.pet_chip	 as petChip,
		p.pet_kind	 as petKind,
		p.pet_gender	 as petGender,
		p.pet_neu		 as petNeu,
		to_char(p.pet_bir,'YYYY-MM-DD')		 as petBir,
		p.pet_etc		 as petEtc,
        m.mem_addr    as memAddr
		
		from pet p, member m
		where p.mem_id = m.mem_id and m.mem_id= #{memId}
	</select>

	<select id="getPet" parameterType="String" resultType="kr.or.ddit.banban.vo.PetVO">
		<!-- atch_file_id atchFileId -->
		
		select 
		p.pet_no	as petNo,
        m.mem_nm      as memNm,
		p.pet_name 	 as petNm,
		p.pet_regno	 as petRegno,
		p.pet_chip	 as petChip,
		p.pet_kind	 as petKind,
		p.pet_gender	 as petGender,
		p.pet_neu		 as petNeu,
		to_char(p.pet_bir,'YYYY-MM-DD')		 as petBir,
		p.pet_etc		 as petEtc,
        m.mem_addr    as memAddr
		
		from pet p, member m
		where p.mem_id = m.mem_id and pet_no = #{petNo}
	</select>

</mapper>