package kr.or.ddit.notice.controller;

import java.io.IOException;
import java.util.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kr.or.ddit.notice.dao.NoticeDaoImpl;
import kr.or.ddit.notice.dao.INoticeDaoforJDBC;
import kr.or.ddit.notice.service.NoticeServiceImpl;
import kr.or.ddit.notice.service.INoticeService;
import kr.or.ddit.notice.vo.NoticeVO;


@WebServlet(value = "/notice/insert.do")
public class InsertNoticeController extends HttpServlet{
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		RequestDispatcher rd = req.getRequestDispatcher("/views/notice/noticeInsertForm.jsp");
		rd.forward(req, resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		// 1. 요청 파라미터 정보 가져오기
		String memId = req.getParameter("memId");
		String bdNm = req.getParameter("bdNm");
		String bdCon = req.getParameter("bdCon");
		
		// 2. 서비스 객체 생성하기
		INoticeService ncService = NoticeServiceImpl.getInstance();
		
		// 3. 회원정보 등록
		NoticeVO nv = new NoticeVO(memId, bdNm, bdCon);
		Date now = new Date();
		nv.setBdReg(now);
		
		int cnt = ncService.registerNotice(nv);
		
		String msg = "";
		if(cnt > 0) {
			// 성공
			msg = "성공";
		}else {
			// 실패
			msg = "실패";
		}
		
		HttpSession httpSession = req.getSession();
		httpSession.setAttribute("msg", msg);
		
		
		// 4. 목록 조회화면으로 이동하기
//		req.getRequestDispatcher("/board/list.do").forward(req, resp);
		resp.sendRedirect(req.getContextPath() + "/notice/list.do");
	}
}
