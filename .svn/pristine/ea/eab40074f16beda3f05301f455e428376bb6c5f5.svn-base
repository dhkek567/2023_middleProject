package kr.or.ddit.banban.controller;

import java.io.IOException;
import java.net.URLEncoder;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

//import kr.or.ddit.banban.service.AtchFileServiceImpl;
//import kr.or.ddit.banban.service.IAtchFileService;
//import kr.or.ddit.banban.vo.AtchFileVO;
import kr.or.ddit.banban.service.IMemberService;
import kr.or.ddit.banban.service.IPetService;
import kr.or.ddit.banban.service.MemberServiceImpl;
import kr.or.ddit.banban.service.PetServiceImpl;
import kr.or.ddit.banban.vo.MemberVO;
import kr.or.ddit.banban.vo.PetVO;

@MultipartConfig
@WebServlet(value = "/InsertPet")
public class InsertPetController extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		RequestDispatcher rd = req.getRequestDispatcher("/views/pet/petInsert.jsp");
		rd.forward(req, resp);

	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setCharacterEncoding("UTF-8");
		req.setCharacterEncoding("UTF-8");
		String memId = (String) req.getSession().getAttribute("loginCode");

		String petNo = req.getParameter("petNo");
		String petNm = req.getParameter("petNm");
		String petRegno = req.getParameter("petRegno");
		String petChip = req.getParameter("petChip");
		String petKind = req.getParameter("petKind");
		String petGender = req.getParameter("petGender");
		String petNeu = req.getParameter("petNeu");
		String petBir = req.getParameter("petBir");
		String petEtc = req.getParameter("petEtc");
		System.out.println("펫 정보들 : " + memId + petNo + petNm + petRegno + petChip + petKind + petNeu + petBir + petEtc);
		IPetService petService = PetServiceImpl.getInstance();
//		IAtchFileService fileService = AtchFileServiceImpl.getInstance();

//		AtchFileVO atchFileVO = new AtchFileVO();

//		atchFileVO = fileService.saveAtchFileList(req);

		PetVO pv = new PetVO(petNo, memId, petNm, petRegno, petChip, petKind, petGender, petNeu, petBir, petEtc);
//		if (atchFileVO != null) {
//			mv.setAtchFileId(atchFileVO.getAtchFileId());
//		}
		System.out.println("펫VO : " + pv);
		int cnt = petService.registerPet(pv);
		System.out.println("cnt : " + cnt);
		String msg = "";
		if (cnt > 0) {
			// 성공
			msg = "반려동물이 등록되었습니다.";
		} else {
			// 실패
			msg = "반려동물 등록에 실패했습니다.";
		}

		// Redirect를
		HttpSession httpSesion = req.getSession();
		httpSesion.setAttribute("msg", msg);

		// 4. 목록 조회화면으로 이동하기
//		req.getRequestDispatcher("/member/list.do").forward(req, resp);
		// sendRedirect 내가 처음 요청한 주소와 달라진 서버가 다시 요청하길 바라는 주소
		/*
		 * forward와 Redirect의 차이 forward는 요청을 하면 응답을 처리한다. (insert 창에서 새로고침을 계속 하면 값이
		 * 여러번 들어가게 된다.) Redirect는 사용자의 요청을 알맞은 url로 새로운 요청을 다시 하게끔 강제화, 요청이 두 번 날아간다.
		 * (주소도 원하는 결과 창이랑 같은 곳으로 표현된다, 결과창만 보여주기 때문이다.) Redirect에는
		 */
		// 응답을 하는 것이기 때문에 resp를 사용한다.
		resp.sendRedirect(req.getContextPath() + "/PetMypage");
	}
}
