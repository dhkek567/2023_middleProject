<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

<!-- 페이징 처리 -->
	<resultMap type="kr.or.ddit.board.vo.BoardVO" id="ncMap">
		<result column="RNUM" property="rnum" />
		<result column="BD_NO" property="bdNo" />
		<result column="BD_CATE_NO" property="bdCateNo" />
		<result column="BD_TITLE" property="bdTitle" />
		<result column="BD_CONT" property="bdCont" />
		<result column="BD_HITS" property="bdHits" />
		<result column="BD_REPCNT" property="bdRepCnt" />
		<result column="MEM_ID" property="memId" />
		<result column="BD_REG" property="bdReg" />
		<result column="BAF_ID" property="bafId" />
	</resultMap>
	
	<resultMap type="kr.or.ddit.board.vo.BoardVO" id="pagingMap">
		<result column="BD_NO" property="bdNo" />
		<result column="BD_CATE_NO" property="bdCateNo" />
		<result column="BD_TITLE" property="bdTitle" />
		<result column="MEM_NIC" property="memNic" />
		<result column="BD_REG" property="bdReg" />
<!-- 		<result column="BAF_ID" property="bafId" /> -->
	</resultMap>
  	
  	<!-- 전체 글 갯수 조회 -->
  	<select id="countList" resultType="int">
  		SELECT COUNT(*) FROM board
  	</select>
  	
  	
  	<!-- 페이지 별 리스트 출력 -->
  	<select id="pagingList" parameterType="hashmap" resultMap="pagingMap">
  		
  		select A.* from(
  			select ROWNUM AS RNUM,
                B.* from(
  				SELECT 
                    b.BD_NO,
                    b.BD_TITLE,
                    m.MEM_NIC,
                    b.BD_CATE_NO,
                    b.BD_REG
                    FROM board b, member m
                    WHERE b.mem_id = m.mem_id
                    and BD_CATE_NO = #{bdCateNo}
                    order by bd_no desc        
				)B
                <![CDATA[
                where ROWNUM <= #{end}
            )A
            where A.rnum >= #{start}
    		]]>
			
	</select>


<!-- Select -->
<!-- 카테고리에 해당하는 모든 게시글 조회 -->
	<select id="getAllBoard" resultType="kr.or.ddit.board.vo.BoardVO">
		
		SELECT 
    	b.BD_NO	as bdNo,
	    b.BD_TITLE as bdTitle,
	    m.MEM_NIC as memNic,
	    b.BD_REG as bdReg
		FROM board b, member m
		WHERE b.mem_id = m.mem_id
		and BD_CATE_NO = #{bdCateNo}
		ORDER BY BD_REG
		
	</select>
	

<!-- 게시글 하나 조회	 -->
	<select id="getBoardOne" parameterType="hashMap"
		resultType="kr.or.ddit.board.vo.BoardVO">
		
		select 
    	b.BD_NO as bdNo,
    	b.BD_CATE_NO as bdCateNo,
    	b.BD_TITLE      as bdTitle,
    	b.BD_CONT    as bdCont,
    	b.BD_REG    as bdReg,
    	b.BD_HITS    as bdHits,
    	b.BD_REPCNT    as bdRepCnt,
    	m.MEM_NIC       as memNic,
    	b.MEM_Id       as memId,
    	b.BAF_ID       as bafId
		from board b, member m
		where b.mem_id = m.mem_id
		and bd_no = #{bdNo}
		
	</select>	
	
<!-- 게시글 당 댓글 조회	 -->
	<select id="getAllComment" parameterType="hashmap" resultType="kr.or.ddit.board.vo.CommentVO">
		
		SELECT 
		c.BD_COM_NO as bdComNo,
		c.BD_NO as bdNo,
		c.BD_CATE_NO as bdCateNo,
		c.BD_COM_CONT as bdComCont,
		c.BD_COM_REPCNT as bdComRepcnt,
		c.mem_ID as memId,
		m.MEM_NIC as memNic,
		c.BD_COM_REG as bdComReg
		FROM BOARD_COMMENT c, member m
		WHERE c.mem_id = m.mem_id
<!-- 		and BD_CATE_NO = 100 -->
		and BD_NO = #{bdNo}
		ORDER BY BD_COM_REG
		
	</select>
	
	
	
	<select id="getWriterCate" resultType="kr.or.ddit.board.vo.BoardVO">
		
		SELECT 
    	BD_CATE_NO as bdCateNo,
    	MEM_ID as memId
    	from board
    	where bdCateNo = #{bdCateNo} and memId = #{memId}
    	ORDER BY BD_REG
		
	</select>
	
	<select id="getAllNotice2" resultMap="ncMap">
		
		SELECT 
		BD_NO as bdNo,
		BD_CATE_NO as bdCateNo,
		BD_TITLE as bdTitle,
		BD_CONT as bdCont,
		BD_REG as bdReg,
		BD_HITS as bdHits,
		BD_REPCNT as bdRepCnt,
		MEM_ID as memId,
		BAF_ID as fileId
		FROM board
		
	</select>

	<select id="getBoard" parameterType="String"
		resultType="kr.or.ddit.board.vo.BoardVO">
		SELECT board_no board_no
		, board_title board_title
		, board_writer board_writer
		, board_content board_content
		, board_date regDt
		FROM jdbc_board
		WHERE 1=1
		<if test='board_no != null and board_no != ""'>
			and board_no = #{board_no}
		</if>
		<if test='board_title != null and board_title != ""'>
			and board_title = #{board_title}
		</if>
		<if test='board_writer != null and board_writer != ""'>
			and board_writer = #{board_writer}
		</if>
		<if test='board_content != null and board_content != ""'>
			and board_content like '%' || #{board_content} || '%'
		</if>
		
	</select>


	
	<select id="getNoticeOne1" parameterType="hashMap"
		resultType="kr.or.ddit.board.vo.BoardVO">
		
		select mem_Id ,BD_NO
    	from BOARD
    	where BD_NO = #{bdNo}
		
	</select>
	
	<select id="getCommentOne" parameterType="hashMap"
		resultType="kr.or.ddit.board.vo.BoardVO">
		
		select BD_COM_NO
    	from BOARD_COMMENT
    	where BD_COM_NO = #{bdComNo}
		
	</select>
	
	<select id="updateBoardRepcnt" parameterType="hashMap"
		resultType="kr.or.ddit.board.vo.BoardVO">
		
		UPDATE board
		SET BD_REPCNT = (BD_REPCNT + 1)
		WHERE BD_NO = #{bdNo}
		
	</select>
	
	<select id="updateMemRepcnt" parameterType="hashMap"
		resultType="kr.or.ddit.banban.vo.MemberVO">
		
		UPDATE member
		SET MEM_REPCNT = (MEM_REPCNT + 1)
		WHERE MEM_ID = #{memId}
		
	</select>
	
	<select id="updateCommentRepcnt" parameterType="hashMap"
		resultType="kr.or.ddit.board.vo.CommentVO">
		
		UPDATE BOARD_COMMENT
		SET BD_COM_REPCNT = (BD_COM_REPCNT + 1)
		WHERE BD_COM_NO = #{bdComNo}
		
	</select>
	
	<select id="checkBoard" parameterType="String" resultType="int">
		SELECT count(*) as cnt
		FROM jdbc_board
		WHERE board_no = #{bdNo}
	</select>




	<insert id="insertNotice"
		parameterType="kr.or.ddit.board.vo.BoardVO">

		insert into board 
		(BD_NO, BD_CATE_NO, BD_TITLE, BD_CONT, BD_REG, MEM_ID)
		values
		(BD_seq.nextVal, #{bdCateNo}, #{bdTitle}, #{bdCont}, sysdate, #{memId})
	
	</insert>
	
	<insert id="insertNoticeComment"
		parameterType="kr.or.ddit.board.vo.CommentVO">

		insert into BOARD_COMMENT 
		(BD_COM_NO, BD_NO, BD_CATE_NO, BD_COM_CONT, MEM_ID, BD_COM_REG)
		values
		(BOARD_COMMENT_SEQ.nextVal, #{bdNo}, 100, #{bdComCont}, #{memId}, sysdate)
		
	</insert>

	<insert id="insertReportNotice" parameterType="kr.or.ddit.board.vo.ReportVO">
	
		INSERT INTO board_report (MEM_ID, BD_NO, BLLST_RSN, REPORTER, REP_CATE)
		SELECT MEM_ID, #{bdNo}, #{bllstRsn}, #{reporter}, #{repCate}
		FROM board
		WHERE bd_no = #{bdNo}
		
	</insert>
	
	<insert id="insertReportComment" parameterType="kr.or.ddit.board.vo.ReportVO">
	
		INSERT INTO board_report (MEM_ID, BLLST_RSN, REPORTER, REP_CATE, BD_COM_NO)
		SELECT MEM_ID, #{bllstRsn}, #{reporter}, #{repCate}, #{bdComNo}
		FROM BOARD_COMMENT
		WHERE BD_COM_NO = #{bdComNo}
		
	</insert>

	<update id="updateNoitce" parameterType="hashMap">

		UPDATE board
		SET
        BD_TITLE = #{bdTitle},
        <if test="bafId > 0">
        	BAF_ID = #{bafId},
        </if>
        BD_CONT = #{bdCont}
		WHERE BD_NO = #{bdNo} and MEM_ID = #{memId}

	</update>

	<delete id="deleteNotice" parameterType="hashMap">
		
		DELETE from board
		WHERE BD_NO = #{bdNo} and MEM_ID = #{memId}
		
	</delete>
	
	<delete id="deleteNoticeComment" parameterType="hashMap">
		
		DELETE from BOARD_COMMENT
		WHERE BD_COM_NO = #{bdComNo} and MEM_ID = #{memId}
		
	</delete>

	
		
	

<!-- 여기부터 병원 리뷰  -->

	<select id="getAllReview" resultType="kr.or.ddit.board.vo.BoardVO">
		
		SELECT 
    	b.BD_NO	as bdNo,
	    b.BD_TITLE as bdTitle,
	    m.MEM_NIC as memNic,
	    b.BD_REG as bdReg

		FROM board b, member m
		WHERE b.mem_id = m.mem_id and BD_CATE_NO = 200
		ORDER BY BD_REG
		
	</select>
	
</mapper>